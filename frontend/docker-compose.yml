version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: turkcell-postgres
    environment:
      POSTGRES_DB: turkcell_smart_tariff
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - turkcell-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: turkcell-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - turkcell-network

  # Redis for caching (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: turkcell-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - turkcell-network

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: turkcell-app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/turkcell_smart_tariff
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672
      - REDIS_URL=redis://redis:6379
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - turkcell-network
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:

networks:
  turkcell-network:
    driver: bridge
